   1               		.file	"Fifo.c"
   2               	__SP_H__ = 0x3e
   3               	__SP_L__ = 0x3d
   4               	__SREG__ = 0x3f
   5               	__tmp_reg__ = 0
   6               	__zero_reg__ = 1
   7               		.text
   8               	.Ltext0:
   9               		.cfi_sections	.debug_frame
  10               	.global	Fifo_fillLevel
  12               	Fifo_fillLevel:
  13               	.LFB0:
  14               		.file 1 "../src/Fifo.c"
   1:../src/Fifo.c **** /*
   2:../src/Fifo.c ****  * Fifo.c
   3:../src/Fifo.c ****  * 
   4:../src/Fifo.c ****  * Copyright 2019 Umar Nisar <umarnisar@outlook.com>
   5:../src/Fifo.c ****  * 
   6:../src/Fifo.c ****  * This program is free software; you can redistribute it and/or modify
   7:../src/Fifo.c ****  * it under the terms of the GNU General Public License as published by
   8:../src/Fifo.c ****  * the Free Software Foundation; either version 2 of the License, or
   9:../src/Fifo.c ****  * (at your option) any later version.
  10:../src/Fifo.c ****  * 
  11:../src/Fifo.c ****  * This program is distributed in the hope that it will be useful,
  12:../src/Fifo.c ****  * but WITHOUT ANY WARRANTY; without even the implied warranty of
  13:../src/Fifo.c ****  * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  14:../src/Fifo.c ****  * GNU General Public License for more details.
  15:../src/Fifo.c ****  * 
  16:../src/Fifo.c ****  * You should have received a copy of the GNU General Public License
  17:../src/Fifo.c ****  * along with this program; if not, write to the Free Software
  18:../src/Fifo.c ****  * Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston,
  19:../src/Fifo.c ****  * MA 02110-1301, USA.
  20:../src/Fifo.c ****  * 
  21:../src/Fifo.c ****  * 
  22:../src/Fifo.c ****  */
  23:../src/Fifo.c **** #include <stdint.h>
  24:../src/Fifo.c **** #include "Fifo.h"
  25:../src/Fifo.c **** 
  26:../src/Fifo.c **** uint8_t Fifo_fillLevel(struct fifo_t* handl)
  27:../src/Fifo.c **** {
  15               		.loc 1 27 0
  16               		.cfi_startproc
  17               	.LVL0:
  18               	/* prologue: function */
  19               	/* frame size = 0 */
  20               	/* stack size = 0 */
  21               	.L__stack_usage = 0
  28:../src/Fifo.c **** 	return handl->fl;
  29:../src/Fifo.c **** }
  22               		.loc 1 29 0
  23 0000 FC01      		movw r30,r24
  24 0002 8581      		ldd r24,Z+5
  25               	.LVL1:
  26 0004 0895      		ret
  27               		.cfi_endproc
  28               	.LFE0:
  30               	.global	Fifo_write
  32               	Fifo_write:
  33               	.LFB1:
  30:../src/Fifo.c **** 
  31:../src/Fifo.c **** uint8_t Fifo_write(struct fifo_t* handl, uint8_t data)
  32:../src/Fifo.c **** {
  34               		.loc 1 32 0
  35               		.cfi_startproc
  36               	.LVL2:
  37               	/* prologue: function */
  38               	/* frame size = 0 */
  39               	/* stack size = 0 */
  40               	.L__stack_usage = 0
  41 0006 FC01      		movw r30,r24
  42               	.LVL3:
  33:../src/Fifo.c **** 	uint8_t ret = 0;
  34:../src/Fifo.c **** 	if(handl->fl < handl->sz)
  43               		.loc 1 34 0
  44 0008 9581      		ldd r25,Z+5
  45 000a 8481      		ldd r24,Z+4
  46               	.LVL4:
  47 000c 9817      		cp r25,r24
  48 000e 00F4      		brsh .L4
  35:../src/Fifo.c **** 	{
  36:../src/Fifo.c **** 		handl->buff[handl->wr] = data;
  49               		.loc 1 36 0
  50 0010 8381      		ldd r24,Z+3
  51 0012 A081      		ld r26,Z
  52 0014 B181      		ldd r27,Z+1
  53 0016 A80F      		add r26,r24
  54 0018 B11D      		adc r27,__zero_reg__
  55 001a 6C93      		st X,r22
  37:../src/Fifo.c **** 		handl->wr = (handl->wr+1) % handl->sz;
  56               		.loc 1 37 0
  57 001c 8381      		ldd r24,Z+3
  58 001e 90E0      		ldi r25,0
  59 0020 0196      		adiw r24,1
  60 0022 6481      		ldd r22,Z+4
  61               	.LVL5:
  62 0024 70E0      		ldi r23,0
  63 0026 0E94 0000 		call __divmodhi4
  64               	.LVL6:
  65 002a 8383      		std Z+3,r24
  38:../src/Fifo.c **** 		handl->fl++;
  66               		.loc 1 38 0
  67 002c 8581      		ldd r24,Z+5
  68 002e 8F5F      		subi r24,lo8(-(1))
  69 0030 8583      		std Z+5,r24
  33:../src/Fifo.c **** 	if(handl->fl < handl->sz)
  70               		.loc 1 33 0
  71 0032 80E0      		ldi r24,0
  72 0034 0895      		ret
  73               	.LVL7:
  74               	.L4:
  39:../src/Fifo.c **** 	}
  40:../src/Fifo.c **** 	else
  41:../src/Fifo.c **** 	{
  42:../src/Fifo.c **** 		ret = 1; 	/* FIFO_FULL */
  75               		.loc 1 42 0
  76 0036 81E0      		ldi r24,lo8(1)
  77               	.LVL8:
  43:../src/Fifo.c **** 	}
  44:../src/Fifo.c **** 	return ret;
  45:../src/Fifo.c **** }
  78               		.loc 1 45 0
  79 0038 0895      		ret
  80               		.cfi_endproc
  81               	.LFE1:
  83               	.global	Fifo_read
  85               	Fifo_read:
  86               	.LFB2:
  46:../src/Fifo.c **** uint8_t Fifo_read(struct fifo_t* handl, uint8_t * data)
  47:../src/Fifo.c **** {
  87               		.loc 1 47 0
  88               		.cfi_startproc
  89               	.LVL9:
  90               	/* prologue: function */
  91               	/* frame size = 0 */
  92               	/* stack size = 0 */
  93               	.L__stack_usage = 0
  94 003a FC01      		movw r30,r24
  95               	.LVL10:
  48:../src/Fifo.c **** 	uint8_t ret = 0;
  49:../src/Fifo.c **** 	if(handl->fl > 0)
  96               		.loc 1 49 0
  97 003c 8581      		ldd r24,Z+5
  98               	.LVL11:
  99 003e 8823      		tst r24
 100 0040 01F0      		breq .L8
  50:../src/Fifo.c **** 	{
  51:../src/Fifo.c **** 		*data = handl->buff[handl->rd];
 101               		.loc 1 51 0
 102 0042 8281      		ldd r24,Z+2
 103 0044 A081      		ld r26,Z
 104 0046 B181      		ldd r27,Z+1
 105 0048 A80F      		add r26,r24
 106 004a B11D      		adc r27,__zero_reg__
 107 004c 8C91      		ld r24,X
 108 004e DB01      		movw r26,r22
 109 0050 8C93      		st X,r24
  52:../src/Fifo.c **** 		handl->rd = (handl->rd+1) % handl->sz;
 110               		.loc 1 52 0
 111 0052 8281      		ldd r24,Z+2
 112 0054 90E0      		ldi r25,0
 113 0056 0196      		adiw r24,1
 114 0058 6481      		ldd r22,Z+4
 115               	.LVL12:
 116 005a 70E0      		ldi r23,0
 117 005c 0E94 0000 		call __divmodhi4
 118               	.LVL13:
 119 0060 8283      		std Z+2,r24
  53:../src/Fifo.c **** 		handl->fl--;
 120               		.loc 1 53 0
 121 0062 8581      		ldd r24,Z+5
 122 0064 8150      		subi r24,lo8(-(-1))
 123 0066 8583      		std Z+5,r24
  48:../src/Fifo.c **** 	if(handl->fl > 0)
 124               		.loc 1 48 0
 125 0068 80E0      		ldi r24,0
 126 006a 0895      		ret
 127               	.LVL14:
 128               	.L8:
  54:../src/Fifo.c **** 	}
  55:../src/Fifo.c **** 	else
  56:../src/Fifo.c **** 	{
  57:../src/Fifo.c **** 		ret = 1; 	/* FIFO_EMPTY */
 129               		.loc 1 57 0
 130 006c 81E0      		ldi r24,lo8(1)
 131               	.LVL15:
  58:../src/Fifo.c **** 	}
  59:../src/Fifo.c **** 	return ret;
  60:../src/Fifo.c **** }
 132               		.loc 1 60 0
 133 006e 0895      		ret
 134               		.cfi_endproc
 135               	.LFE2:
 137               	.Letext0:
 138               		.file 2 "../include/Fifo.h"
 139               		.file 3 "/usr/lib/avr/include/stdint.h"
DEFINED SYMBOLS
                            *ABS*:0000000000000000 Fifo.c
     /tmp/ccFvYRQU.s:2      *ABS*:000000000000003e __SP_H__
     /tmp/ccFvYRQU.s:3      *ABS*:000000000000003d __SP_L__
     /tmp/ccFvYRQU.s:4      *ABS*:000000000000003f __SREG__
     /tmp/ccFvYRQU.s:5      *ABS*:0000000000000000 __tmp_reg__
     /tmp/ccFvYRQU.s:6      *ABS*:0000000000000001 __zero_reg__
     /tmp/ccFvYRQU.s:12     .text:0000000000000000 Fifo_fillLevel
     /tmp/ccFvYRQU.s:32     .text:0000000000000006 Fifo_write
     /tmp/ccFvYRQU.s:85     .text:000000000000003a Fifo_read

UNDEFINED SYMBOLS
__divmodhi4
